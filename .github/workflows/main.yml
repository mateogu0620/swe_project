# This is a workflow to test and deploy our demo app.

name: Demo CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DEMO_HOME: /home/runner/work/ticket_scraper/ticket_scraper/
  PYTHONPATH: /home/runner/work/ticket_scraper/ticket_scraper/
  TICKETMASTER_API_KEY: ${{ secrets.TICKETMASTER_API_KEY}}
  SEATGEEK_API_KEY: ${{ secrets.SEATGEEK_API_KEY}}
  SEATGEEK_API_SECRET: ${{ secrets.SEATGEEK_API_SECRET}}
  MONGODB_API_KEY: ${{ secrets.MONGODB_API_KEY}}
  MG_CONNECTION_STRING: mongodb+srv://Cluster08493:${{ secrets.MONGODB_PASS}}@cluster08493.lse2bn1.mongodb.net/test
  DEMO_PA_PWD: ${{secrets.DEMO_PA_PWD}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Python packages.
        run: pip install -r requirements-dev.txt
      
      - name: Install dotenv python package separately
        run: pip3 install python-dotenv

      - name: Run Python tests.
        run: make all_tests
      
      - name: Permission to deploy file
        run: chmod u+x deploy.sh

      - name: Permission to rebuild file
        run: chmod u+x rebuild.sh

      - name: Deploy to PythonAnywhere
        run: ./deploy.sh
        
