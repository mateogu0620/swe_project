# This is a workflow to test and deploy our demo app.

name: Demo CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DEMO_HOME: /home/runner/work/ticket_scraper/ticket_scraper/
  PYTHONPATH: /home/runner/work/ticket_scraper/ticket_scraper/
  TICKETMASTER_API_KEY: ${{ secrets.TICKETMASTER_API_KEY}}
  SEATGEEK_API_KEY: ${{ secrets.SEATGEEK_API_KEY}}
  SEATGEEK_API_SECRET: ${{ secrets.SEATGEEK_API_SECRET}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # environment: heroku-deploy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Reset PYTHONPATH
        run: export PYTHONPATH="${PYTHONPATH}:/home/runner/work/ticket_scraper/ticket_scraper/"
        
      - name: echo PYTHONPATH for confirmation
        run: echo $PYTHONPATH

      - name: Install Python packages.
        run: pip install -r requirements-dev.txt
      
      - name: Install dotenv python package separately
        run: pip3 install python-dotenv
      
      #- name: 'Create env file'
      #  run: touch .env; echo env.PROD_ENV_FILE > .env; cat .env

      - name: Run Python tests.
        run: make all_tests
        
      # Deploy to Heroku
      #  - uses: akhileshns/heroku-deploy@v3.12.12
      #    with:
      #        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #        heroku_app_name: "demo-repo3"
      #        heroku_email: "ejc369@nyu.edu"
